{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:ListBucket",
        "s3:ListBucketVersions",
        "s3:GetBucketVersioning"
      ],
      "Resource": [
        "arn:aws:s3:::${environment}-states"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:GetObjectVersion",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
      ],
      "Resource": [
        "arn:aws:s3:::${environment}-states/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "kms:Decrypt",
        "kms:Encrypt"
      ],
      "Resource": [
        "${s3_kms_key_arn}"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "kms:GenerateDataKey"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:GetHostedZone",
        "route53:ChangeResourceRecordSets",
        "route53:GetHealthCheck",
        "route53:ListTagsForResource",
        "route53:ChangeTagsForResource",
        "route53:ListResourceRecordSets"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/${hosted_zone_id}",
        "arn:aws:route53:::healthcheck/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:GetHostedZone"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/${parent_hosted_zone_id}"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:ListHostedZones"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:ReleaseAddress",
        "ec2:DisassociateAddress",
        "ec2:DescribeAddresses",
        "ec2:AssociateAddress",
        "ec2:AllocateAddress"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:RevokeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:DeleteSecurityGroup",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
      ],
      "Resource": "arn:aws:ec2:${region}:${account_id}:security-group/*",
      "Condition": {
        "StringEquals": {
          "ec2:ResourceTag/Environment": "${environment}",
          "ec2:ResourceTag/Name": "${environment}-jumpbox-security-group"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:CreateSecurityGroup",
        "ec2:DescribeSecurityGroups"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:TagKeys": [
            "Name",
            "Environment"
          ]
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DetachVolume",
        "ec2:AttachVolume",
        "ec2:DeleteVolume",
        "ec2:TerminateInstances",
        "ec2:CreateVolume"
      ],
      "Resource": [
        "arn:aws:ec2:${region}:${account_id}:instance/*",
        "arn:aws:ec2:${region}:${account_id}:volume/*"
      ],
      "Condition": {
        "StringEquals": {
          "ec2:ResourceTag/Name": "jumpbox",
          "ec2:ResourceTag/Environment": "${environment}",
          "ec2:Region": "${region}"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:CreateTags",
        "ec2:RunInstances"
      ],
      "Resource": [
        "arn:aws:ec2:${region}:${account_id}:instance/*",
        "arn:aws:ec2:${region}:${account_id}:subnet/*",
        "arn:aws:ec2:${region}:${account_id}:volume/*",
        "arn:aws:ec2:${region}:${account_id}:network-interface/*",
        "arn:aws:ec2:*::image/*",
        "arn:aws:ec2:${region}:${account_id}:security-group/*"
      ],
      "Condition": {
        "StringEquals": {
          "ec2:ResourceTag/Name": "jumpbox",
          "ec2:Vpc": "${vpc_arn}",
          "ec2:ResourceTag/Environment": "${environment}",
          "ec2:Region": "${region}",
          "ec2:Subnet": "${subnet_arn}"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeImages",
        "ec2:DescribeInstances",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeRegions",
        "ec2:DescribeVolumes",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups"
      ],
      "Resource": "*",
      "Condition": {
        "StringEquals": {
          "aws:TagKeys": [
            "Name",
            "Environment"
          ]
        }
      }
    }
  ]
}