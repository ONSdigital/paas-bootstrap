---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: robertgruber/terraform-resource

- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource

resources:
- name: paas-bootstrap-git
  type: git
  source:
    uri: https://github.com/ONSdigital/paas-bootstrap.git
    branch: feature/jumpbox

- name: jumpbox-deployment-git
  type: git
  source:
    uri: https://github.com/cppforlife/jumpbox-deployment.git

- name: jumpbox-terraform
  type: terraform
  source:
    storage:
      bucket: ((environment))-states
      bucket_path: jumpbox/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: vpc-tfstate-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: vpc/tfstate.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: concourse-tfstate-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: concourse/tfstate.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-vars-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox-variables.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: ssh-private-key-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: concourse/ssh-key.pem
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

jobs:
- name: terraform-jumpbox
  serial_groups: [main]
  serial: true
  plan:
  - aggregate:
    - get: vpc-tfstate-s3
    - get: paas-bootstrap-git
  - task: get-terraform-vars
    file: paas-bootstrap-git/ci/tasks/jumpbox/get_terraform_vars/task.yml
  - put: jumpbox-terraform
    params:
      terraform_source: paas-bootstrap-git/terraform/jumpbox/aws
      env_name: ((environment))
      var_files: [vpc-vars/vars.json]

- name: create-jumpbox
  serial_groups: [main]
  serial: true
  plan:
  - aggregate:
    - get: paas-bootstrap-git
      passed: [terraform-jumpbox]
      trigger: true
    - get: jumpbox-deployment-git
      version: { ref: ((jumpbox_commit_ref)) }
    - get: jumpbox-terraform
      passed: [terraform-jumpbox]
    - get: jumpbox-vars-s3
    - get: ssh-private-key-s3
    - get: concourse-tfstate-s3
  - task: interpolate-jumpbox
    file: paas-bootstrap-git/ci/tasks/jumpbox/interpolate/task.yml
    # on_success:
    #   put: jumpbox-vars-s3
    #   params:
    #     jumpbox-manifests/jumpbox-variables.yml

- name: verify-jumpbox
  serial: true
  plan:
  - get: paas-bootstrap-git
    passed: [create-jumpbox]
    trigger: true
  - task: verify
    file: paas-bootstrap-git/ci/tasks/jumpbox/test/task.yml
    params:
      ENVIRONMENT: ((environment))
