---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: robertgruber/terraform-resource

- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource

resources:
- name: trigger-weekday-evening
  type: time
  source:
    start: 7:30 PM
    stop: 8:00 PM
    location: Europe/London
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: paas-bootstrap-git
  type: git
  source:
    uri: https://github.com/ONSdigital/paas-bootstrap.git
    branch: ((branch))

- name: bosh-deployment-git
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: manual-force
  type: time
  source:
    interval: 1m

- name: jumpbox-terraform
  type: terraform
  source:
    storage:
      bucket: ons-paas-((environment))-states
      bucket_path: jumpbox/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/((environment)).tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-state-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox-state.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-manifest-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-terraform
  type: terraform
  source:
    storage:
      bucket: ons-paas-((environment))-states
      bucket_path: bosh/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/((environment)).tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-vars-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh-variables.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-state-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh-state.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-manifest-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: vpc-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: vpc/tfstate.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))


- name: concourse-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: concourse/tfstate.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: cf-terraform
  type: terraform
  source:
    storage:
      bucket: ons-paas-((environment))-states
      bucket_path: cf/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: prometheus-terraform
  type: terraform
  source:
    storage:
      bucket: ons-paas-((environment))-states
      bucket_path: prometheus/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))c

- name: cf-vars-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: cf/cf-variables.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))
    initial_version: "-"
    initial_content_text: |
        ---

- name: cf-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: cf/((environment)).tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: prometheus-manifest-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: prometheus/prometheus.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))
    initial_version: "-"
    initial_content_text: |
        ---

jobs:
- name: trigger-destroy
  serial_groups: [destruction]
  serial: true
  plan:
  - get: manual-force
    trigger: false

- name: destroy-prometheus
  serial_groups: [destruction]
  serial: true
  plan:
  - get: manual-force
    trigger: true
    passed: [trigger-destroy]
  - get: trigger-weekday-evening
    trigger: true
  - aggregate:
    - get: paas-bootstrap-git
    - get: bosh-vars-s3
    - get: bosh-manifest-s3
    - get: prometheus-manifest-s3
  - task: destroy-prometheus
    file: paas-bootstrap-git/ci/tasks/prometheus/destroy/task.yml
    params:
      ENVIRONMENT: ((environment))

- name: destroy-cf
  serial_groups: [destruction]
  serial: true
  plan:
  - get: trigger-weekday-evening
    trigger: true
    passed: [destroy-prometheus]
  - get: manual-force
    trigger: true
    passed: [destroy-prometheus]
  - aggregate:
    - get: paas-bootstrap-git
    - get: bosh-vars-s3
    - get: bosh-manifest-s3
  - task: destroy-cf
    file: paas-bootstrap-git/ci/tasks/cf/destroy/task.yml
    params:
      ENVIRONMENT: ((environment))

- name: destroy-bosh
  serial_groups: [destruction]
  serial: true
  plan:
  - get: trigger-weekday-evening
    trigger: true
    passed: [destroy-cf]
  - get: manual-force
    trigger: true
    passed: [destroy-cf]
  - aggregate:
    - get: paas-bootstrap-git
    - get: bosh-state-s3
    - get: bosh-manifest-s3
  - task: destroy-bosh
    file: paas-bootstrap-git/ci/tasks/bosh/destroy/task.yml
    on_success:
      put: bosh-state-s3
      params:
        file: bosh-state/bosh-state.json

- name: destroy-jumpbox
  serial_groups: [destruction]
  serial: true
  plan:
  - get: trigger-weekday-evening
    trigger: true
    passed: [destroy-bosh]
  - get: manual-force
    trigger: true
    passed: [destroy-bosh]
  - aggregate:
    - get: paas-bootstrap-git
    - get: jumpbox-state-s3
    - get: jumpbox-manifest-s3
  - task: destroy-jumpbox
    file: paas-bootstrap-git/ci/tasks/jumpbox/destroy/task.yml
    params:
      ENVIRONMENT: ((environment))
    on_success:
      put: jumpbox-state-s3
      params:
        file: jumpbox-state/jumpbox-state.json

- name: terraform-destroy
  serial_groups: [destruction]
  serial: true
  plan:
  - get: trigger-weekday-evening
    trigger: true
    passed: [destroy-jumpbox]
  - get: manual-force
    trigger: true
    passed: [destroy-jumpbox]
  - aggregate:
    - get: paas-bootstrap-git
    - get: vpc-tfstate-s3
    - get: bosh-tfstate-s3
    - get: cf-tfstate-s3
    - get: cf-vars-s3
    - get: bosh-vars-s3
    - get: bosh-manifest-s3
    - get: jumpbox-tfstate-s3
    - get: concourse-tfstate-s3
    - get: prometheus-manifest-s3
    - get: bosh-deployment-git
      version: { ref: ((bosh_commit_ref)) }
    - get: bosh-state-s3
    - get: jumpbox-state-s3
    - get: jumpbox-manifest-s3
  - task: Prometheus - get vars for destruction
    file: paas-bootstrap-git/ci/tasks/prometheus/get_terraform_vars/task.yml
    params:
      ENVIRONMENT: ((environment))
  - put: prometheus-terraform
    params:
      terraform_source: paas-bootstrap-git/terraform/prometheus/aws
      env_name: ((environment))
      var_files:
      - vpc-vars/vars.json
      - concourse-vars/vars.json
      - bosh-vars/vars.json
      - cf-vars/vars.json
      - jumpbox-vars/vars.json
      action: destroy
    get_params:
      action: destroy
  - task: CF - get vars for destruction
    file: paas-bootstrap-git/ci/tasks/cf/get_terraform_vars/task.yml
    params:
      ENVIRONMENT: ((environment))
  - put: cf-terraform
    params:
      terraform_source: paas-bootstrap-git/terraform/cf/aws
      env_name: ((environment))
      var_files:
      - vpc-vars/vars.json
      - bosh-vars/vars.json
      - concourse-vars/vars.json
      - jumpbox-vars/vars.json
      action: destroy
    get_params:
      action: destroy
  - task: Bosh - get vars for destruction
    file: paas-bootstrap-git/ci/tasks/bosh/get_terraform_vars/task.yml
    params:
      ENVIRONMENT: ((environment))
  - put: bosh-terraform
    params:
      terraform_source: paas-bootstrap-git/terraform/bosh/aws
      env_name: ((environment))
      var_files:
      - vpc-vars/vars.json
      - concourse-vars/vars.json
      - jumpbox-vars/vars.json
      action: destroy
    get_params:
      action: destroy
  - task: Jumpbox - get vars for destruction
    file: paas-bootstrap-git/ci/tasks/jumpbox/get_terraform_vars/task.yml
    params:
      ENVIRONMENT: ((environment))
  - put: jumpbox-terraform
    params:
      terraform_source: paas-bootstrap-git/terraform/jumpbox/aws
      env_name: ((environment))
      var_files:
      - vpc-vars/vars.json
      - concourse-vars/vars.json
      action: destroy
    get_params:
      action: destroy

- name: delete-buckets
  serial_groups: [destruction]
  serial: true
  plan:
  - get: manual-force
    trigger: true
    passed: [terraform-destroy]
  - get: trigger-weekday-evening
    trigger: true
    passed: [terraform-destroy]
  - get: paas-bootstrap-git
  - task: empty prometheus buckets
    file: paas-bootstrap-git/ci/tasks/destroy/empty_buckets/task.yml
    params:
      ONS_PREFIX: ons-paas
      ENVIRONMENT: ((environment))
      NAMESPACE: prometheus
  - task: empty cf buckets
    file: paas-bootstrap-git/ci/tasks/destroy/empty_buckets/task.yml
    params:
      ONS_PREFIX: ons-paas
      ENVIRONMENT: ((environment))
      NAMESPACE: cf
  - task: empty bosh buckets
    file: paas-bootstrap-git/ci/tasks/destroy/empty_buckets/task.yml
    params:
      ONS_PREFIX: ons-paas
      ENVIRONMENT: ((environment))
      NAMESPACE: bosh
  - task: empty jumpbox buckets
    file: paas-bootstrap-git/ci/tasks/destroy/empty_buckets/task.yml
    params:
      ONS_PREFIX: ons-paas
      ENVIRONMENT: ((environment))
      NAMESPACE: jumpbox