---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: robertgruber/terraform-resource

- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource

resources:
- name: paas-bootstrap-git
  type: git
  source:
    uri: https://github.com/ONSdigital/paas-bootstrap.git
    branch: ((branch))

- name: jumpbox-deployment-git
  type: git
  source:
    uri: https://github.com/cppforlife/jumpbox-deployment.git

- name: bosh-deployment-git
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: jumpbox-terraform
  type: terraform
  source:
    storage:
      bucket: ((environment))-states
      bucket_path: jumpbox/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-tfstate-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/((environment)).tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-vars-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox-variables.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-state-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox-state.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: jumpbox-manifest-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: jumpbox/jumpbox.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-terraform
  type: terraform
  source:
    storage:
      bucket: ((environment))-states
      bucket_path: bosh/
      use_ec2_role: true
      region_name: ((region))
      server_side_encryption: 'aws:kms'
      sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-tfstate-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/((environment)).tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-vars-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh-variables.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-state-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh-state.json
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: bosh-manifest-s3
  type: s3-iam
  source:
    bucket: ((environment))-states
    private: true
    region_name: ((region))
    versioned_file: bosh/bosh.yml
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

jobs:
- name: destroy-bosh
  serial_groups: [main]
  serial: true
  plan:
  - aggregate:
    - get: paas-bootstrap-git
    - get: bosh-deployment-git
      version: { ref: ((bosh_commit_ref)) }
    - get: bosh-terraform
    - get: bosh-tfstate-s3
    - get: bosh-vars-s3
    - get: bosh-state-s3
    - get: bosh-manifest-s3
  - task: destroy-bosh
    file: paas-bootstrap-git/ci/tasks/bosh/destroy/task.yml
    on_success:
      put: bosh-state-s3
      params:
        file: bosh-state/bosh-state.json

- name: destroy-jumpbox
  serial_groups: [main]
  serial: true
  plan:
  - aggregate:
    - get: paas-bootstrap-git
    - get: jumpbox-deployment-git
      version: { ref: ((jumpbox_commit_ref)) }
    - get: jumpbox-terraform
    - get: jumpbox-tfstate-s3
    - get: jumpbox-vars-s3
    - get: jumpbox-state-s3
    - get: jumpbox-manifest-s3
  - task: destroy-jumpbox
    file: paas-bootstrap-git/ci/tasks/jumpbox/destroy/task.yml
    on_success:
      put: jumpbox-state-s3
      params:
        file: jumpbox-state/jumpbox-state.json

- name: destroy-cf
  serial_groups: [main]
  serial: true
  plan:
  - aggregate:
    - get: paas-bootstrap-git
    - get: bosh-vars-s3
    - get: bosh-manifest-s3
    - name: cf-manifest-s3
  - task: destroy-cf
    file: paas-bootstrap-git/ci/tasks/cf/destroy/task.yml