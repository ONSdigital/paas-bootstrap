---
resource_types:
- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource
    
resources:
- name: paas-bootstrap-git
  type: git
  source:
    uri: https://github.com/ONSdigital/paas-bootstrap.git
    branch: ((branch))

- name: cf-deployment-concourse-tasks-git
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-acceptance-tests-git
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
    tag_filter: v*

- name: cf-deployment-git
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    tag_filter: v*

- name: prometheus-boshrelease-git
  type: git
  source:
    uri: https://github.com/bosh-prometheus/prometheus-boshrelease.git
    tag_filter: v*

- name: states-variables-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: ((environment)).tfvars
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))

- name: base-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: ((environment))-base.tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))    
 
- name: rds-tfstate-s3
  type: s3-iam
  source:
    bucket: ons-paas-((environment))-states
    private: true
    region_name: ((region))
    versioned_file: ((environment))-rds.tfstate
    server_side_encryption: 'aws:kms'
    sse_kms_key_id: ((s3_kms_key_id))      

jobs:
- name: initialise
  serial: true
  serial_groups: [cats]
  plan:
  - get: paas-bootstrap-git
    trigger: true

- name: upload stemcells
  serial: true
  serial_groups: [cats]
  plan:
  - aggregate: 
    - get: paas-bootstrap-git
      passed: [initialise]
    - get: cf-deployment-git
      version: { ref: ((cf_tag)) }
    - get: base-tfstate-s3  
  - task: upload stemcells
    file: paas-bootstrap-git/ci/tasks/cf/stemcells/task.yml
    params:
      ENVIRONMENT: ((environment))
      BOSH_CLIENT_SECRET: ((bosh_admin_password))
      BOSH_CA_CERT: ((bosh_ca_cert))

- name: deploy cloud foundry
  serial: true
  serial_groups: [cats]
  plan:
  - aggregate: 
    - get: paas-bootstrap-git
      passed: ["upload stemcells"]
      trigger: true
    - get: cf-deployment-concourse-tasks-git
    - get: cf-deployment-git
      version: { ref: ((cf_tag)) }
    - get: prometheus-boshrelease-git
      version: { ref: ((prometheus_tag)) }
    - get: states-variables-s3
    - get: base-tfstate-s3
    - get: rds-tfstate-s3
  - task: interpolate and deploy
    file: paas-bootstrap-git/ci/tasks/cf/deploy/task.yml
    params:
      ENVIRONMENT: ((environment))
      BOSH_CLIENT_SECRET: ((bosh_admin_password))
      BOSH_CA_CERT: ((bosh_ca_cert))

- name: cats
  serial: true
  serial_groups: [cats]
  plan:
  - aggregate:
    - get: paas-bootstrap-git
      passed: ["deploy cloud foundry"]
      trigger: true
    - get: cf-deployment-concourse-tasks-git
    - get: cf-acceptance-tests-git
      version: { ref: ((cats_tag)) }
  - task: interpolate CATS config
    file: paas-bootstrap-git/ci/tasks/cf/interpolate_cats/task.yml
    params:
      DOMAIN: ((domain))
      ENVIRONMENT: ((environment))
      CATS_CONFIG_FILE: paas-bootstrap-git/profiles/staging/cats_config.json
      CF_ADMIN_PASSWORD: ((cf_admin_password))
  - task: run CATS tests
    file: cf-deployment-concourse-tasks-git/run-cats/task.yml
    input_mapping:
      cf-deployment-concourse-tasks: cf-deployment-concourse-tasks-git
      cf-acceptance-tests: cf-acceptance-tests-git
    params:
      CAPTURE_CONFIG: true
      NODES: 6
